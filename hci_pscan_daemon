#!/bin/sh

### BEGIN INIT INFO
# Provides:          hci_pscan_daemon 
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
### END INIT INFO
#     update-rc.d hci_pscan_daemon defaults

RUBY="`which ruby`"

DAEMON="$RUBY"
DAEMON_FILE="/home/hci_pscan.rb"

if [ -e $DAEMON_FILE ]; then
	:
else
	echo "Daemon script not found: $DAEMON_FILE"
	exit 2
fi

DAEMON_OPTS=$DAEMON_FILE
DAEMON_NAME=hci_pscan_daemon

# This next line determines what user the script runs as.
# Root generally not recommended but necessary if you are using the Raspberry Pi GPIO from Python.
DAEMON_USER=root

# The process ID of the script when it runs is stored here:
PIDFILE=/var/run/$DAEMON_NAME.pid

. /lib/lsb/init-functions

do_start () {
    log_daemon_msg "Starting HCI PSCAN daemon" "$DAEMON_NAME"
    start-stop-daemon --start --background --pidfile $PIDFILE --make-pidfile --user $DAEMON_USER --chuid $DAEMON_USER --startas $DAEMON -- $DAEMON_OPTS
    log_end_msg $?
	sleep 1
	do_status
  }
do_stop () {
    log_daemon_msg "Stopping HCI PSCAN daemon" "$DAEMON_NAME"
    start-stop-daemon --stop --pidfile $PIDFILE --retry 10
    log_end_msg $?
  }
do_status () {
    status_of_proc -p $PIDFILE $DAEMON "HCI PSCAN daemon" && exit 0 || exit $?
  }

case "$1" in
    start|stop|status)
            do_${1}
    ;;
    restart|reload|force-reload)
            do_stop
            do_start
    ;;
	*)
            echo "Usage: /etc/init.d/$DAEMON_NAME {start|stop|restart|status}"
            exit 1
    ;;
esac
